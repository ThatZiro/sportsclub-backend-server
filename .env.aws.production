# AWS Production Environment Configuration
# For deployment on EC2 with Aurora PostgreSQL

# =============================================================================
# DATABASE CONFIGURATION (AWS Aurora PostgreSQL)
# =============================================================================

# Aurora Cluster Configuration
# Replace with your actual Aurora cluster endpoint
DATABASE_URL="postgresql://username:password@your-aurora-cluster.cluster-xxxxx.region.rds.amazonaws.com:5432/pbsports"

# Alternative: Use individual components for more flexibility
DB_HOST="pbsportsclub-pg-dev.cluster-c0ry6cg203sa.us-east-1.rds.amazonaws.com"
DB_PORT=5432
DB_NAME="pbsports"
DB_USERNAME="postgres"

# For Secrets Manager (recommended for production)
# Set this if using AWS Secrets Manager for database credentials
AWS_SECRET_ARN="arn:aws:secretsmanager:us-east-1:104061617593:secret:rds!cluster-e8b3eecc-8dd2-482b-acdd-1ec0c1ca545c-VBMETK"
AWS_REGION="us-east-1"

# Traditional password (if not using Secrets Manager)
# DB_PASSWORD="your_secure_password"

# =============================================================================
# AWS CONFIGURATION
# =============================================================================

# AWS Region where your resources are deployed
AWS_REGION="us-east-1"

# EC2 Instance Configuration
# Set to production for EC2 deployment
NODE_ENV="production"

# API Server Configuration
PORT=3000
API_PORT=3000

# If using Application Load Balancer, you might want to bind to all interfaces
# HOST="0.0.0.0"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration - CRITICAL: Generate a strong secret!
# Use: openssl rand -base64 64
JWT_SECRET="kGSHp4EoPD/cnHlZZEfH/+auseFJzU1ot1BfbcITKy6gpHJ8/On8dfCgJz63hTm5
S/sHKHIOnSxiYvO0PR/VrA=="
JWT_EXPIRES_IN="1h"

# Password Hashing
BCRYPT_ROUNDS=12

# CORS Configuration
# Replace with your actual frontend domain(s)
FRONTEND_URL="https://your-frontend-domain.com"

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# League Configuration (customize for your league)
LEAGUE_SLUG="nationals-2025"
LEAGUE_NAME="Nationals 2025"
LEAGUE_SEASON="Nationals 2025"

# Registration Settings
AUTO_APPROVE_JOINS=false

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Authentication Rate Limiting (stricter for auth endpoints)
AUTH_RATE_LIMIT_WINDOW_MS=60000
AUTH_RATE_LIMIT_MAX_REQUESTS=5

# General API Rate Limiting
API_RATE_LIMIT_WINDOW_MS=60000
API_RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log Level (error, warn, info, debug)
LOG_LEVEL="info"

# Enable CloudWatch logging if using AWS CloudWatch
# ENABLE_CLOUDWATCH_LOGS=true
# CLOUDWATCH_LOG_GROUP="/aws/ec2/pbsportsclub-api"

# =============================================================================
# SSL/TLS CONFIGURATION (if terminating SSL at application level)
# =============================================================================

# If using HTTPS directly (not recommended - use ALB/CloudFront instead)
# ENABLE_HTTPS=false
# SSL_CERT_PATH="/path/to/cert.pem"
# SSL_KEY_PATH="/path/to/key.pem"

# =============================================================================
# DOCKER CONFIGURATION (if using Docker on EC2)
# =============================================================================

# These are only needed if you're running Docker containers on EC2
# Comment out if running directly on EC2

# Docker PostgreSQL settings (not needed with Aurora)
# POSTGRES_DB="pbsports"
# POSTGRES_USER="postgres" 
# POSTGRES_PASSWORD="not_needed_with_aurora"
# DB_PORT=5432